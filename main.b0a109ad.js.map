{"version":3,"sources":["src/assets/samples/tr808/index.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["import hiCongaSrc from './conga_hi.wav'\nimport lowCongaSrc from './conga_low.wav'\nimport midCongaSrc from './conga_mid.wav'\nimport cowbellSrc from './cowbell.wav'\nimport cymbalSrc from './cymbal.wav'\nimport closeHatSrc from './hat_close.wav'\nimport openHatSrc from './hat_open.wav'\nimport kickSrc from './kick.wav'\nimport snareSrc from './snare.wav'\nimport clapSrc from './clap.wav'\n\nexport const hiConga: string = hiCongaSrc\nexport const lowConga: string = lowCongaSrc\nexport const midConga: string = midCongaSrc\nexport const cowbell: string = cowbellSrc\nexport const cymbal: string = cymbalSrc\nexport const closeHat: string = closeHatSrc\nexport const openHat: string = openHatSrc\nexport const kick: string = kickSrc\nexport const snare: string = snareSrc\nexport const clap: string = clapSrc\n","import { closeHat, hiConga, cowbell, snare, kick, lowConga } from './assets/samples/tr808/index'\n\nfunction pad (n: string, width: number): string {\n  return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n\n}\n\nfunction color2rythm (colorHex: string): Array<boolean> {\n  const hex: string = colorHex.replace('#', '')\n  const bin: string = parseInt(hex, 16).toString(2).padStart(8, '0')\n  return pad(bin, 24).split('').map(val => val === '1')\n}\n\nclass Sequencer {\n  private bpm: number = 120\n  private interval: number\n  public sequences: Array<{ pattern: Array<boolean>, sample: HTMLAudioElement }> = []\n  public currentStep: number = 0\n\n  constructor (sequences: Array<{ pattern: Array<boolean>, sampleSrc: string }>, tempo: number = 120) {\n    this.sequences = sequences.map(sequence => ({\n      pattern: sequence.pattern,\n      sample: new Audio(sequence.sampleSrc)\n    }))\n    this.bpm = tempo\n  }\n\n  public play (callback: (number) => void): void {\n    this.currentStep = 0\n    clearInterval(this.interval)\n    this.interval = setInterval(() => {\n      callback(this.currentStep)\n      this.step()\n    }, (60 * 1000) / this.bpm)\n  }\n\n  public updatePattern (sequenceIndex: number, newPattern: Array<boolean>): void {\n    if (this.sequences[sequenceIndex]) {\n      this.sequences[sequenceIndex].pattern = newPattern\n    }\n  }\n\n  private step (): void {\n    this.sequences.forEach(sequence => {\n      const shouldPlay = sequence.pattern[this.currentStep]\n\n      if (shouldPlay) {\n        sequence.sample.pause()\n        sequence.sample.currentTime = 0\n        sequence.sample.play()\n      }\n    })\n\n    this.currentStep = (this.currentStep + 1) % this.sequences[0].pattern.length\n  }\n}\n\nconst sequences = [\n  { color: '#888888', sample: kick },\n  { color: '#222222', sample: closeHat },\n  { color: '#080808', sample: snare },\n  { color: '#410010', sample: cowbell },\n  { color: '#924924', sample: hiConga },\n  { color: '#108901', sample: lowConga }\n]\n\nconst seq = new Sequencer(sequences.map(s => ({ pattern: color2rythm(s.color), sampleSrc: s.sample })), 400)\n\nconst inputsWrapper = document.createElement('div')\nseq.sequences.forEach((_sequence, i) => {\n  const input = document.createElement('input')\n  input.setAttribute('type', 'color')\n  input.value = sequences[i].color\n\n  inputsWrapper.append(input)\n  input.addEventListener('change', () => {\n    seq.updatePattern(i, color2rythm(input.value))\n    sequences[i].color = input.value\n  })\n})\ndocument.body.append(inputsWrapper)\n\nconst canvas = document.createElement('canvas')\nconst ctx = canvas.getContext('2d')\n\nconst physicalScl = 30\nconst scl = physicalScl * devicePixelRatio\ncanvas.style.height = physicalScl * seq.sequences.length + 'px'\ncanvas.style.widows = physicalScl * seq.sequences[0].pattern.length + 'px'\ncanvas.height = scl * seq.sequences.length\ncanvas.width = scl * seq.sequences[0].pattern.length\n\nfunction draw (sequencerInstance: Sequencer, currentStep: number): void {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  sequencerInstance.sequences.forEach((sequence, y) => {\n    sequence.pattern.forEach((step, x) => {\n      ctx.fillStyle = step ? sequences[y].color : '#eceff1'\n      const margin = x === currentStep ? 10 : 2\n      ctx.fillRect(x * scl + margin, y * scl + margin, scl - 2 * margin, scl - 2 * margin)\n    })\n  })\n}\n\ndraw(seq, 0)\n\ndocument.body.append(canvas)\n\ndocument.querySelector('button').addEventListener('click', () => {\n  seq.play(currentStep => {\n    draw(seq, currentStep)\n  })\n})\n"]}